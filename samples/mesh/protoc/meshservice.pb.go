// Code generated by protoc-gen-go. DO NOT EDIT.
// source: meshservice.proto

package com_mesh_demo_protoc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type C2S_Cmds int32

const (
	C2S_Cmds_None                   C2S_Cmds = 0
	C2S_Cmds_Entry_Insert           C2S_Cmds = 100100001
	C2S_Cmds_Entry_Sum              C2S_Cmds = 100100003
	C2S_Cmds_Entry_Max              C2S_Cmds = 100100005
	C2S_Cmds_Middle_InsertDecorator C2S_Cmds = 100200001
	C2S_Cmds_Model_Insert           C2S_Cmds = 100300001
	C2S_Cmds_Model_Sum              C2S_Cmds = 100300003
	C2S_Cmds_Model_Max              C2S_Cmds = 100300005
	C2S_Cmds_Model_Len              C2S_Cmds = 100300007
)

var C2S_Cmds_name = map[int32]string{
	0:         "None",
	100100001: "Entry_Insert",
	100100003: "Entry_Sum",
	100100005: "Entry_Max",
	100200001: "Middle_InsertDecorator",
	100300001: "Model_Insert",
	100300003: "Model_Sum",
	100300005: "Model_Max",
	100300007: "Model_Len",
}

var C2S_Cmds_value = map[string]int32{
	"None":                   0,
	"Entry_Insert":           100100001,
	"Entry_Sum":              100100003,
	"Entry_Max":              100100005,
	"Middle_InsertDecorator": 100200001,
	"Model_Insert":           100300001,
	"Model_Sum":              100300003,
	"Model_Max":              100300005,
	"Model_Len":              100300007,
}

func (x C2S_Cmds) String() string {
	return proto.EnumName(C2S_Cmds_name, int32(x))
}

func (C2S_Cmds) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a46fe84f6638ee42, []int{0}
}

type InsertReq struct {
	Val                  int32    `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertReq) Reset()         { *m = InsertReq{} }
func (m *InsertReq) String() string { return proto.CompactTextString(m) }
func (*InsertReq) ProtoMessage()    {}
func (*InsertReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a46fe84f6638ee42, []int{0}
}

func (m *InsertReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertReq.Unmarshal(m, b)
}
func (m *InsertReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertReq.Marshal(b, m, deterministic)
}
func (m *InsertReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertReq.Merge(m, src)
}
func (m *InsertReq) XXX_Size() int {
	return xxx_messageInfo_InsertReq.Size(m)
}
func (m *InsertReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertReq.DiscardUnknown(m)
}

var xxx_messageInfo_InsertReq proto.InternalMessageInfo

func (m *InsertReq) GetVal() int32 {
	if m != nil {
		return m.Val
	}
	return 0
}

type InsertResp struct {
	Len                  int32    `protobuf:"varint,1,opt,name=len,proto3" json:"len,omitempty"`
	Data                 []int32  `protobuf:"varint,2,rep,packed,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertResp) Reset()         { *m = InsertResp{} }
func (m *InsertResp) String() string { return proto.CompactTextString(m) }
func (*InsertResp) ProtoMessage()    {}
func (*InsertResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a46fe84f6638ee42, []int{1}
}

func (m *InsertResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertResp.Unmarshal(m, b)
}
func (m *InsertResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertResp.Marshal(b, m, deterministic)
}
func (m *InsertResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertResp.Merge(m, src)
}
func (m *InsertResp) XXX_Size() int {
	return xxx_messageInfo_InsertResp.Size(m)
}
func (m *InsertResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertResp.DiscardUnknown(m)
}

var xxx_messageInfo_InsertResp proto.InternalMessageInfo

func (m *InsertResp) GetLen() int32 {
	if m != nil {
		return m.Len
	}
	return 0
}

func (m *InsertResp) GetData() []int32 {
	if m != nil {
		return m.Data
	}
	return nil
}

type SumReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumReq) Reset()         { *m = SumReq{} }
func (m *SumReq) String() string { return proto.CompactTextString(m) }
func (*SumReq) ProtoMessage()    {}
func (*SumReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a46fe84f6638ee42, []int{2}
}

func (m *SumReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumReq.Unmarshal(m, b)
}
func (m *SumReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumReq.Marshal(b, m, deterministic)
}
func (m *SumReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumReq.Merge(m, src)
}
func (m *SumReq) XXX_Size() int {
	return xxx_messageInfo_SumReq.Size(m)
}
func (m *SumReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SumReq.DiscardUnknown(m)
}

var xxx_messageInfo_SumReq proto.InternalMessageInfo

type SumResp struct {
	Sum                  int32    `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResp) Reset()         { *m = SumResp{} }
func (m *SumResp) String() string { return proto.CompactTextString(m) }
func (*SumResp) ProtoMessage()    {}
func (*SumResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a46fe84f6638ee42, []int{3}
}

func (m *SumResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResp.Unmarshal(m, b)
}
func (m *SumResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResp.Marshal(b, m, deterministic)
}
func (m *SumResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResp.Merge(m, src)
}
func (m *SumResp) XXX_Size() int {
	return xxx_messageInfo_SumResp.Size(m)
}
func (m *SumResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResp.DiscardUnknown(m)
}

var xxx_messageInfo_SumResp proto.InternalMessageInfo

func (m *SumResp) GetSum() int32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

type MaxReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaxReq) Reset()         { *m = MaxReq{} }
func (m *MaxReq) String() string { return proto.CompactTextString(m) }
func (*MaxReq) ProtoMessage()    {}
func (*MaxReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a46fe84f6638ee42, []int{4}
}

func (m *MaxReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaxReq.Unmarshal(m, b)
}
func (m *MaxReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaxReq.Marshal(b, m, deterministic)
}
func (m *MaxReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaxReq.Merge(m, src)
}
func (m *MaxReq) XXX_Size() int {
	return xxx_messageInfo_MaxReq.Size(m)
}
func (m *MaxReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MaxReq.DiscardUnknown(m)
}

var xxx_messageInfo_MaxReq proto.InternalMessageInfo

type MaxResp struct {
	Max                  int32    `protobuf:"varint,1,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaxResp) Reset()         { *m = MaxResp{} }
func (m *MaxResp) String() string { return proto.CompactTextString(m) }
func (*MaxResp) ProtoMessage()    {}
func (*MaxResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a46fe84f6638ee42, []int{5}
}

func (m *MaxResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaxResp.Unmarshal(m, b)
}
func (m *MaxResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaxResp.Marshal(b, m, deterministic)
}
func (m *MaxResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaxResp.Merge(m, src)
}
func (m *MaxResp) XXX_Size() int {
	return xxx_messageInfo_MaxResp.Size(m)
}
func (m *MaxResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MaxResp.DiscardUnknown(m)
}

var xxx_messageInfo_MaxResp proto.InternalMessageInfo

func (m *MaxResp) GetMax() int32 {
	if m != nil {
		return m.Max
	}
	return 0
}

type LenReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LenReq) Reset()         { *m = LenReq{} }
func (m *LenReq) String() string { return proto.CompactTextString(m) }
func (*LenReq) ProtoMessage()    {}
func (*LenReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a46fe84f6638ee42, []int{6}
}

func (m *LenReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LenReq.Unmarshal(m, b)
}
func (m *LenReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LenReq.Marshal(b, m, deterministic)
}
func (m *LenReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LenReq.Merge(m, src)
}
func (m *LenReq) XXX_Size() int {
	return xxx_messageInfo_LenReq.Size(m)
}
func (m *LenReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LenReq.DiscardUnknown(m)
}

var xxx_messageInfo_LenReq proto.InternalMessageInfo

type LenResp struct {
	Len                  int32    `protobuf:"varint,1,opt,name=len,proto3" json:"len,omitempty"`
	Data                 []int32  `protobuf:"varint,2,rep,packed,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LenResp) Reset()         { *m = LenResp{} }
func (m *LenResp) String() string { return proto.CompactTextString(m) }
func (*LenResp) ProtoMessage()    {}
func (*LenResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a46fe84f6638ee42, []int{7}
}

func (m *LenResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LenResp.Unmarshal(m, b)
}
func (m *LenResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LenResp.Marshal(b, m, deterministic)
}
func (m *LenResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LenResp.Merge(m, src)
}
func (m *LenResp) XXX_Size() int {
	return xxx_messageInfo_LenResp.Size(m)
}
func (m *LenResp) XXX_DiscardUnknown() {
	xxx_messageInfo_LenResp.DiscardUnknown(m)
}

var xxx_messageInfo_LenResp proto.InternalMessageInfo

func (m *LenResp) GetLen() int32 {
	if m != nil {
		return m.Len
	}
	return 0
}

func (m *LenResp) GetData() []int32 {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("com.mesh_demo.protoc.C2S_Cmds", C2S_Cmds_name, C2S_Cmds_value)
	proto.RegisterType((*InsertReq)(nil), "com.mesh_demo.protoc.InsertReq")
	proto.RegisterType((*InsertResp)(nil), "com.mesh_demo.protoc.InsertResp")
	proto.RegisterType((*SumReq)(nil), "com.mesh_demo.protoc.SumReq")
	proto.RegisterType((*SumResp)(nil), "com.mesh_demo.protoc.SumResp")
	proto.RegisterType((*MaxReq)(nil), "com.mesh_demo.protoc.MaxReq")
	proto.RegisterType((*MaxResp)(nil), "com.mesh_demo.protoc.MaxResp")
	proto.RegisterType((*LenReq)(nil), "com.mesh_demo.protoc.LenReq")
	proto.RegisterType((*LenResp)(nil), "com.mesh_demo.protoc.LenResp")
}

func init() { proto.RegisterFile("meshservice.proto", fileDescriptor_a46fe84f6638ee42) }

var fileDescriptor_a46fe84f6638ee42 = []byte{
	// 406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x93, 0xc1, 0xaa, 0xd3, 0x40,
	0x14, 0x86, 0xcd, 0x6d, 0x93, 0xdb, 0x7b, 0x10, 0x1c, 0x47, 0x91, 0xcb, 0xd5, 0x62, 0xc9, 0xea,
	0xe2, 0x22, 0x81, 0xf8, 0x06, 0x5e, 0x45, 0xc4, 0xc6, 0x45, 0xe2, 0xda, 0x32, 0x26, 0x07, 0x2c,
	0x64, 0x66, 0xda, 0x4c, 0x52, 0xe2, 0xdb, 0x28, 0xe2, 0x33, 0xb8, 0xf6, 0x09, 0x7c, 0x81, 0xba,
	0x90, 0x22, 0x92, 0xb7, 0x90, 0x99, 0x49, 0x84, 0x4a, 0x53, 0x5c, 0xb8, 0xba, 0xbb, 0x33, 0xff,
	0xf9, 0xcf, 0xc7, 0xcc, 0xf9, 0x19, 0xb8, 0xcd, 0x51, 0xbd, 0x53, 0x58, 0x6e, 0x96, 0x19, 0x06,
	0xab, 0x52, 0x56, 0x92, 0xde, 0xcd, 0x24, 0x0f, 0xb4, 0xbc, 0xc8, 0x91, 0x4b, 0x2b, 0x66, 0xfe,
	0x14, 0xce, 0x5e, 0x08, 0x85, 0x65, 0x95, 0xe0, 0x9a, 0x12, 0x18, 0x6d, 0x58, 0x71, 0xee, 0xcc,
	0x9c, 0x4b, 0x37, 0xd1, 0xa5, 0x1f, 0x01, 0xf4, 0x6d, 0xb5, 0xd2, 0xfd, 0x02, 0x45, 0xdf, 0x2f,
	0x50, 0x50, 0x0a, 0xe3, 0x9c, 0x55, 0xec, 0xfc, 0x64, 0x36, 0xba, 0x74, 0x13, 0x53, 0xfb, 0x13,
	0xf0, 0xd2, 0x9a, 0x27, 0xb8, 0xf6, 0xef, 0xc3, 0xa9, 0xa9, 0xec, 0xa8, 0xaa, 0x79, 0x3f, 0xaa,
	0x6a, 0xae, 0x6d, 0x31, 0x6b, 0x3a, 0x9b, 0xa9, 0xac, 0x8d, 0xb3, 0xa6, 0xb7, 0x71, 0xd6, 0x68,
	0xdb, 0x1c, 0x85, 0xb6, 0x85, 0x70, 0x6a, 0xaa, 0x7f, 0xbd, 0xc8, 0xa3, 0x2f, 0x0e, 0x4c, 0xae,
	0xa2, 0x74, 0x71, 0xc5, 0x73, 0x45, 0x27, 0x30, 0x7e, 0x25, 0x05, 0x92, 0x1b, 0xf4, 0x0e, 0xdc,
	0x7c, 0x26, 0xaa, 0xf2, 0xfd, 0xc2, 0xbe, 0x8c, 0x7c, 0xfc, 0xf6, 0x3d, 0xa4, 0x04, 0xce, 0xac,
	0x98, 0xd6, 0x9c, 0x7c, 0xda, 0x53, 0x62, 0xd6, 0x90, 0xcf, 0x5a, 0x99, 0xc2, 0xbd, 0x78, 0x99,
	0xe7, 0x05, 0x76, 0x93, 0x4f, 0x31, 0x93, 0x25, 0xab, 0x64, 0x49, 0xbe, 0x6e, 0x77, 0xa1, 0xe6,
	0xc6, 0x32, 0xc7, 0xa2, 0xe7, 0xfe, 0x68, 0x5b, 0x43, 0xb1, 0xa2, 0xe6, 0xee, 0xf6, 0x14, 0xcd,
	0xfd, 0xb9, 0xa7, 0xcc, 0x51, 0x90, 0x5f, 0x6d, 0x1b, 0x46, 0x1e, 0x8c, 0x9f, 0xb3, 0x0a, 0xa3,
	0xad, 0x03, 0xae, 0xb9, 0x04, 0x7d, 0x09, 0x9e, 0xc5, 0xd2, 0x87, 0xc1, 0xa1, 0x20, 0x83, 0x3f,
	0x29, 0x5e, 0xcc, 0x8e, 0x1b, 0xd4, 0x8a, 0x3e, 0x81, 0x51, 0x5a, 0x73, 0xfa, 0xe0, 0xb0, 0xd1,
	0x86, 0x77, 0x31, 0x3d, 0xd2, 0xb5, 0x8c, 0x98, 0x35, 0x43, 0x0c, 0x9b, 0xec, 0x10, 0xa3, 0x4b,
	0x3b, 0x7a, 0x03, 0x9e, 0x5d, 0x28, 0x7d, 0x0d, 0xb7, 0xfe, 0xda, 0xe9, 0x7f, 0x78, 0x67, 0xf4,
	0xe1, 0x04, 0x5c, 0xb3, 0xd9, 0x6b, 0xb9, 0x3e, 0xcd, 0x98, 0xa3, 0x18, 0x62, 0xd8, 0x5f, 0x33,
	0xc4, 0xe8, 0x7e, 0xd2, 0x5b, 0xcf, 0x9c, 0x1f, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xea, 0x6d,
	0xbc, 0xac, 0x31, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GateClient is the client API for Gate service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GateClient interface {
}

type gateClient struct {
	cc *grpc.ClientConn
}

func NewGateClient(cc *grpc.ClientConn) GateClient {
	return &gateClient{cc}
}

// GateServer is the server API for Gate service.
type GateServer interface {
}

// UnimplementedGateServer can be embedded to have forward compatible implementations.
type UnimplementedGateServer struct {
}

func RegisterGateServer(s *grpc.Server, srv GateServer) {
	s.RegisterService(&_Gate_serviceDesc, srv)
}

var _Gate_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.mesh_demo.protoc.Gate",
	HandlerType: (*GateServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "meshservice.proto",
}

// EntryClient is the client API for Entry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EntryClient interface {
	Insert(ctx context.Context, in *InsertReq, opts ...grpc.CallOption) (*InsertResp, error)
	Sum(ctx context.Context, in *SumReq, opts ...grpc.CallOption) (*SumResp, error)
	Max(ctx context.Context, in *MaxReq, opts ...grpc.CallOption) (*MaxResp, error)
}

type entryClient struct {
	cc *grpc.ClientConn
}

func NewEntryClient(cc *grpc.ClientConn) EntryClient {
	return &entryClient{cc}
}

func (c *entryClient) Insert(ctx context.Context, in *InsertReq, opts ...grpc.CallOption) (*InsertResp, error) {
	out := new(InsertResp)
	err := c.cc.Invoke(ctx, "/com.mesh_demo.protoc.Entry/Insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) Sum(ctx context.Context, in *SumReq, opts ...grpc.CallOption) (*SumResp, error) {
	out := new(SumResp)
	err := c.cc.Invoke(ctx, "/com.mesh_demo.protoc.Entry/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) Max(ctx context.Context, in *MaxReq, opts ...grpc.CallOption) (*MaxResp, error) {
	out := new(MaxResp)
	err := c.cc.Invoke(ctx, "/com.mesh_demo.protoc.Entry/Max", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EntryServer is the server API for Entry service.
type EntryServer interface {
	Insert(context.Context, *InsertReq) (*InsertResp, error)
	Sum(context.Context, *SumReq) (*SumResp, error)
	Max(context.Context, *MaxReq) (*MaxResp, error)
}

// UnimplementedEntryServer can be embedded to have forward compatible implementations.
type UnimplementedEntryServer struct {
}

func (*UnimplementedEntryServer) Insert(ctx context.Context, req *InsertReq) (*InsertResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Insert not implemented")
}
func (*UnimplementedEntryServer) Sum(ctx context.Context, req *SumReq) (*SumResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedEntryServer) Max(ctx context.Context, req *MaxReq) (*MaxResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Max not implemented")
}

func RegisterEntryServer(s *grpc.Server, srv EntryServer) {
	s.RegisterService(&_Entry_serviceDesc, srv)
}

func _Entry_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mesh_demo.protoc.Entry/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).Insert(ctx, req.(*InsertReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mesh_demo.protoc.Entry/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).Sum(ctx, req.(*SumReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_Max_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MaxReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).Max(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mesh_demo.protoc.Entry/Max",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).Max(ctx, req.(*MaxReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Entry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.mesh_demo.protoc.Entry",
	HandlerType: (*EntryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Insert",
			Handler:    _Entry_Insert_Handler,
		},
		{
			MethodName: "Sum",
			Handler:    _Entry_Sum_Handler,
		},
		{
			MethodName: "Max",
			Handler:    _Entry_Max_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "meshservice.proto",
}

// MiddleClient is the client API for Middle service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MiddleClient interface {
	InsertDecorator(ctx context.Context, in *InsertReq, opts ...grpc.CallOption) (*InsertResp, error)
}

type middleClient struct {
	cc *grpc.ClientConn
}

func NewMiddleClient(cc *grpc.ClientConn) MiddleClient {
	return &middleClient{cc}
}

func (c *middleClient) InsertDecorator(ctx context.Context, in *InsertReq, opts ...grpc.CallOption) (*InsertResp, error) {
	out := new(InsertResp)
	err := c.cc.Invoke(ctx, "/com.mesh_demo.protoc.Middle/InsertDecorator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MiddleServer is the server API for Middle service.
type MiddleServer interface {
	InsertDecorator(context.Context, *InsertReq) (*InsertResp, error)
}

// UnimplementedMiddleServer can be embedded to have forward compatible implementations.
type UnimplementedMiddleServer struct {
}

func (*UnimplementedMiddleServer) InsertDecorator(ctx context.Context, req *InsertReq) (*InsertResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertDecorator not implemented")
}

func RegisterMiddleServer(s *grpc.Server, srv MiddleServer) {
	s.RegisterService(&_Middle_serviceDesc, srv)
}

func _Middle_InsertDecorator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MiddleServer).InsertDecorator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mesh_demo.protoc.Middle/InsertDecorator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MiddleServer).InsertDecorator(ctx, req.(*InsertReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Middle_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.mesh_demo.protoc.Middle",
	HandlerType: (*MiddleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InsertDecorator",
			Handler:    _Middle_InsertDecorator_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "meshservice.proto",
}

// ModelClient is the client API for Model service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ModelClient interface {
	Insert(ctx context.Context, in *InsertReq, opts ...grpc.CallOption) (*InsertResp, error)
	Sum(ctx context.Context, in *SumReq, opts ...grpc.CallOption) (*SumResp, error)
	Max(ctx context.Context, in *MaxReq, opts ...grpc.CallOption) (*MaxResp, error)
	Len(ctx context.Context, in *LenReq, opts ...grpc.CallOption) (*LenResp, error)
}

type modelClient struct {
	cc *grpc.ClientConn
}

func NewModelClient(cc *grpc.ClientConn) ModelClient {
	return &modelClient{cc}
}

func (c *modelClient) Insert(ctx context.Context, in *InsertReq, opts ...grpc.CallOption) (*InsertResp, error) {
	out := new(InsertResp)
	err := c.cc.Invoke(ctx, "/com.mesh_demo.protoc.Model/Insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelClient) Sum(ctx context.Context, in *SumReq, opts ...grpc.CallOption) (*SumResp, error) {
	out := new(SumResp)
	err := c.cc.Invoke(ctx, "/com.mesh_demo.protoc.Model/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelClient) Max(ctx context.Context, in *MaxReq, opts ...grpc.CallOption) (*MaxResp, error) {
	out := new(MaxResp)
	err := c.cc.Invoke(ctx, "/com.mesh_demo.protoc.Model/Max", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelClient) Len(ctx context.Context, in *LenReq, opts ...grpc.CallOption) (*LenResp, error) {
	out := new(LenResp)
	err := c.cc.Invoke(ctx, "/com.mesh_demo.protoc.Model/Len", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ModelServer is the server API for Model service.
type ModelServer interface {
	Insert(context.Context, *InsertReq) (*InsertResp, error)
	Sum(context.Context, *SumReq) (*SumResp, error)
	Max(context.Context, *MaxReq) (*MaxResp, error)
	Len(context.Context, *LenReq) (*LenResp, error)
}

// UnimplementedModelServer can be embedded to have forward compatible implementations.
type UnimplementedModelServer struct {
}

func (*UnimplementedModelServer) Insert(ctx context.Context, req *InsertReq) (*InsertResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Insert not implemented")
}
func (*UnimplementedModelServer) Sum(ctx context.Context, req *SumReq) (*SumResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedModelServer) Max(ctx context.Context, req *MaxReq) (*MaxResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Max not implemented")
}
func (*UnimplementedModelServer) Len(ctx context.Context, req *LenReq) (*LenResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Len not implemented")
}

func RegisterModelServer(s *grpc.Server, srv ModelServer) {
	s.RegisterService(&_Model_serviceDesc, srv)
}

func _Model_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mesh_demo.protoc.Model/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServer).Insert(ctx, req.(*InsertReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Model_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mesh_demo.protoc.Model/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServer).Sum(ctx, req.(*SumReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Model_Max_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MaxReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServer).Max(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mesh_demo.protoc.Model/Max",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServer).Max(ctx, req.(*MaxReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Model_Len_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServer).Len(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mesh_demo.protoc.Model/Len",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServer).Len(ctx, req.(*LenReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Model_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.mesh_demo.protoc.Model",
	HandlerType: (*ModelServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Insert",
			Handler:    _Model_Insert_Handler,
		},
		{
			MethodName: "Sum",
			Handler:    _Model_Sum_Handler,
		},
		{
			MethodName: "Max",
			Handler:    _Model_Max_Handler,
		},
		{
			MethodName: "Len",
			Handler:    _Model_Len_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "meshservice.proto",
}
